[{"/Volumes/chia xiong/Git/Sofofiling/client/src/index.js":"1","/Volumes/chia xiong/Git/Sofofiling/client/src/components/App.js":"2","/Volumes/chia xiong/Git/Sofofiling/client/src/components/Home/Home.js":"3","/Volumes/chia xiong/Git/Sofofiling/client/src/components/Page/Feed.js":"4","/Volumes/chia xiong/Git/Sofofiling/client/src/components/SideBar/SideBar.js":"5","/Volumes/chia xiong/Git/Sofofiling/client/src/components/Post/Post.js":"6","/Volumes/chia xiong/Git/Sofofiling/client/src/components/MultiStepForm/StepForm.js":"7","/Volumes/chia xiong/Git/Sofofiling/client/src/components/MultiStepForm/FormDetail/Welcome.js":"8","/Volumes/chia xiong/Git/Sofofiling/client/src/components/MultiStepForm/FormDetail/SignUp.js":"9","/Volumes/chia xiong/Git/Sofofiling/client/src/components/MultiStepForm/FormDetail/PictureProfile.js":"10","/Volumes/chia xiong/Git/Sofofiling/client/src/components/SideBar/Reminder.js":"11","/Volumes/chia xiong/Git/Sofofiling/client/src/provider/authProvider.js":"12","/Volumes/chia xiong/Git/Sofofiling/client/src/userContext/useUser.js":"13","/Volumes/chia xiong/Git/Sofofiling/client/src/components/Page/SignIn.js":"14","/Volumes/chia xiong/Git/Sofofiling/client/src/components/Post/PostForm.js":"15"},{"size":230,"mtime":1608080845990,"results":"16","hashOfConfig":"17"},{"size":567,"mtime":1608080545990,"results":"18","hashOfConfig":"17"},{"size":1583,"mtime":1607997544860,"results":"19","hashOfConfig":"17"},{"size":2486,"mtime":1608245979430,"results":"20","hashOfConfig":"17"},{"size":4654,"mtime":1608163136950,"results":"21","hashOfConfig":"17"},{"size":2115,"mtime":1608245578470,"results":"22","hashOfConfig":"17"},{"size":1457,"mtime":1608181613380,"results":"23","hashOfConfig":"17"},{"size":1721,"mtime":1608171984290,"results":"24","hashOfConfig":"17"},{"size":2536,"mtime":1608181648930,"results":"25","hashOfConfig":"17"},{"size":2136,"mtime":1608171497890,"results":"26","hashOfConfig":"17"},{"size":1225,"mtime":1608163276540,"results":"27","hashOfConfig":"17"},{"size":523,"mtime":1608223959990,"results":"28","hashOfConfig":"17"},{"size":972,"mtime":1607993338250,"results":"29","hashOfConfig":"17"},{"size":2838,"mtime":1608162902340,"results":"30","hashOfConfig":"17"},{"size":3004,"mtime":1608241929900,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10crmg8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"/Volumes/chia xiong/Git/Sofofiling/client/src/index.js",[],["67","68"],"/Volumes/chia xiong/Git/Sofofiling/client/src/components/App.js",[],"/Volumes/chia xiong/Git/Sofofiling/client/src/components/Home/Home.js",[],"/Volumes/chia xiong/Git/Sofofiling/client/src/components/Page/Feed.js",["69","70","71"],"import React, { useState, useEffect } from \"react\";\nimport SideBar from \"../SideBar/SideBar\";\nimport Reminder from \"../SideBar/Reminder\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Post from \"../Post/Post\";\nimport PostForm from \"../Post/PostForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider } from \"@material-ui/core\";\nimport { navigate } from \"@reach/router\";\nimport axios from \"axios\";\nimport useUser from \"../../userContext/useUser\";\n\nconst useStyles = makeStyles(theme => ({\n  reminder: {\n    position: \"relative\",\n    left: \"20px\",\n    bottom: \"10px\",\n  },\n  divider: {\n    marginLeft: \"55px\",\n  },\n}));\n\nexport default function Feed() {\n  const classes = useStyles();\n\n  const [posts, setPosts] = useState([]);\n  const [refreshPost, setRefreshPost] = useState(true);\n\n  const { token, user } = useUser();\n\n  if (!user) navigate(\"/signin\");\n\n  const addPost = async content => {\n    await axios\n      .post(\n        \"http://localhost:5000/api/post\",\n        {\n          content: content.content,\n          title: content.title,\n          limit: parseInt(content.limit),\n          location: content.location,\n        },\n        { headers: { \"x-auth-token\": token } }\n      )\n      .then(response => {\n        console.log(response.data);\n        console.log(\"post added\");\n      })\n      .catch(error => {\n        console.log(error.response);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/user\", {\n        headers: { \"x-auth-token\": token },\n      })\n      .then(res => {\n        console.log(res.data);\n      })\n      .catch(err => {\n        console.log(err.res);\n      });\n  });\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/post\", {\n        headers: { \"x-auth-token\": token },\n      })\n      // .then(({ data }) => setPosts(data))\n      .then(res => {\n        console.log(res.data);\n      })\n      .catch(err => {\n        console.log(err.res);\n      });\n  }, [refreshPost]);\n\n  return (\n    <div>\n      <Grid container>\n        <Grid>\n          <SideBar />\n        </Grid>\n        <Grid>\n          <Grid item>\n            <PostForm onPostSubmit={addPost} />\n          </Grid>\n          <Divider className={classes.divider} />\n          <Grid item>\n            {posts.map(post => (\n              <Post key={post._id} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid className={classes.reminder}>\n          <Reminder />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Volumes/chia xiong/Git/Sofofiling/client/src/components/SideBar/SideBar.js",[],"/Volumes/chia xiong/Git/Sofofiling/client/src/components/Post/Post.js",["72","73"],"/Volumes/chia xiong/Git/Sofofiling/client/src/components/MultiStepForm/StepForm.js",["74"],"import React, { useState } from \"react\";\nimport SignUp from \"./FormDetail/SignUp\";\nimport Welcome from \"./FormDetail/Welcome\";\nimport PictureProfile from \"./FormDetail/PictureProfile\";\n\nexport default function StepForm() {\n  const [step, setStep] = useState(1);\n  const [form, setForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // const [firstName, setFirstName] = useState(\"\");\n  // const [lastName, setLastName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n\n  const nextStep = () => {\n    setStep(step + 1);\n  };\n\n  const prevStep = () => {\n    setStep(step - 1);\n  };\n\n  const handleChange = input => event => {\n    // setFirstName({ [input]: event.target.value });\n    // setLastName({ [input]: event.target.value });\n    // setEmail({ [input]: event.target.value });\n    // setPassword({ [input]: event.target.value });\n    setForm({ ...form, [event.target.form]: event.target.values });\n  };\n\n  const values = { form };\n\n  switch (step) {\n    case 1:\n      return (\n        <SignUp\n          nextStep={nextStep}\n          handleChange={handleChange}\n          values={values}\n        />\n      );\n    case 2:\n      return (\n        <PictureProfile\n          nextStep={nextStep}\n          prevStep={prevStep}\n          handleChange={handleChange}\n          values={values}\n        />\n      );\n    case 3:\n      return <Welcome />;\n  }\n}\n","/Volumes/chia xiong/Git/Sofofiling/client/src/components/MultiStepForm/FormDetail/Welcome.js",[],"/Volumes/chia xiong/Git/Sofofiling/client/src/components/MultiStepForm/FormDetail/SignUp.js",[],"/Volumes/chia xiong/Git/Sofofiling/client/src/components/MultiStepForm/FormDetail/PictureProfile.js",[],"/Volumes/chia xiong/Git/Sofofiling/client/src/components/SideBar/Reminder.js",[],"/Volumes/chia xiong/Git/Sofofiling/client/src/provider/authProvider.js",[],"/Volumes/chia xiong/Git/Sofofiling/client/src/userContext/useUser.js",["75"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport AuthProvider from \"../provider/authProvider\";\n\nfunction getCurrentUser(token) {\n  const userDecoded = jwt.decode(token);\n  return userDecoded;\n}\n\nconst UserContext = createContext({\n  user: null,\n  token: null,\n});\n\nexport function UserProvider({ children }) {\n  const getToken = AuthProvider.provider.token;\n  const [token, setToken] = useState(getToken);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (!user && token) {\n      const user = getCurrentUser(token);\n      AuthProvider.provider.token = token;\n      setUser(user);\n    } else if (!token) {\n      AuthProvider.provider.logout();\n      setUser(null);\n    }\n  }, [token]);\n\n  return (\n    <UserContext.Provider value={{ user, token, setToken }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\nconst useUser = () => useContext(UserContext);\n\nexport default useUser;\n","/Volumes/chia xiong/Git/Sofofiling/client/src/components/Page/SignIn.js",[],"/Volumes/chia xiong/Git/Sofofiling/client/src/components/Post/PostForm.js",["76","77","78"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    dispaly: \"flex\",\n    backgroundColor: \"#eee\",\n    marginLeft: \"30px\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  card: {\n    minWidth: \"1000px\",\n  },\n  cardHeader: {\n    paddingLeft: theme.spacing(5),\n    display: \"flex\",\n    marginTop: \"20px\",\n    marginLeft: \"20px\",\n  },\n  avatar: {\n    marginTop: \"20px\",\n    width: \"50px\",\n    height: \"50px\",\n  },\n  name: {\n    marginLeft: \"16px\",\n    fontSize: \"1.5em\",\n    marginTop: \"30px\",\n  },\n  formField: {\n    width: \"100%\",\n  },\n  radioBtn: {\n    display: \"flex\",\n    direction: \"row\",\n  },\n}));\n\nexport default function PostForm({ onPostSubmit }) {\n  const classes = useStyles();\n  const [post, setPost] = useState({\n    content: \"\",\n    title: \"\",\n    location: \"\",\n    limit: \"\",\n  });\n  const [content, setContent] = useState(\"\");\n\n  const handleChange = e => {\n    setPost({ ...post, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={onPostSubmit}>\n        <div>\n          <div className={classes.cardHeader}>\n            <Avatar className={classes.avatar} />\n            <h5 className={classes.name}>Chia Xiong</h5>\n          </div>\n          <TextField\n            className={classes.formField}\n            multiline\n            rows={5}\n            name=\"content\"\n            value={post.content}\n            onChange={handleChange}></TextField>\n          <div>\n            <div className={classes.inputField}>\n              <label htmlFor=\"title\">TITLE</label>\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={post.title}\n                onChange={handleChange}></input>\n              <label htmlFor=\"location\">LOCATION</label>\n              <input\n                type=\"text\"\n                name=\"location\"\n                value={post.location}\n                onChange={handleChange}></input>\n              {/* <label htmlFor=\"date\">DATE</label>\n              <input\n                type=\"text\"\n                name=\"date\"\n                value={post.date}\n                onChange={handleChange}></input>\n              <label htmlFor=\"time\">TIME</label>\n              <input\n                type=\"text\"\n                name=\"time\"\n                value={post.time}\n                onChange={handleChange}></input> */}\n              <label htmlFor=\"limit\">LIMIT</label>\n              <input\n                type=\"text\"\n                name=\"limit\"\n                value={post.limit}\n                onChange={handleChange}></input>\n            </div>\n          </div>\n        </div>\n        <Button onClick={() => onPostSubmit(post)}>Post</Button>\n      </form>\n    </div>\n  );\n}\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":27,"column":17,"nodeType":"85","messageId":"86","endLine":27,"endColumn":25},{"ruleId":"83","severity":1,"message":"87","line":28,"column":23,"nodeType":"85","messageId":"86","endLine":28,"endColumn":37},{"ruleId":"88","severity":1,"message":"89","line":80,"column":6,"nodeType":"90","endLine":80,"endColumn":19,"suggestions":"91"},{"ruleId":"83","severity":1,"message":"92","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":15},{"ruleId":"83","severity":1,"message":"93","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":37,"column":3,"nodeType":"96","messageId":"97","endLine":57,"endColumn":4},{"ruleId":"88","severity":1,"message":"98","line":29,"column":6,"nodeType":"90","endLine":29,"endColumn":13,"suggestions":"99"},{"ruleId":"83","severity":1,"message":"100","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"101","line":54,"column":10,"nodeType":"85","messageId":"86","endLine":54,"endColumn":17},{"ruleId":"83","severity":1,"message":"102","line":54,"column":19,"nodeType":"85","messageId":"86","endLine":54,"endColumn":29},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'setPosts' is assigned a value but never used.","Identifier","unusedVar","'setRefreshPost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'useUser' is defined but never used.","'Button' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["106"],"'useEffect' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [refreshPost, token]",{"range":"111","text":"112"},"Update the dependencies array to be: [token, user]",{"range":"113","text":"114"},[1961,1974],"[refreshPost, token]",[765,772],"[token, user]"]