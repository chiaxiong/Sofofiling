[{"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/index.js":"1","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/App.js":"2","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Page/SignIn.js":"3","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/userContext/useUser.js":"4","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Home/Home.js":"5","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Page/Feed.js":"6","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/provider/authProvider.js":"7","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/Reminder.js":"8","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MenuItem/MenuNav.js":"9","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/SignUp.js":"10","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/PictureProfile.js":"11","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/Welcome.js":"12","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/SideBar.js":"13","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Post/PostForm.js":"14","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Post/Post.js":"15","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/MultistepForm.js":"16","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/Welcome.js":"17","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/SignUp.js":"18","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/PictureProfile.js":"19"},{"size":230,"mtime":1608581568862,"results":"20","hashOfConfig":"21"},{"size":472,"mtime":1608769245447,"results":"22","hashOfConfig":"21"},{"size":3053,"mtime":1608774184468,"results":"23","hashOfConfig":"21"},{"size":972,"mtime":1608778365013,"results":"24","hashOfConfig":"21"},{"size":1565,"mtime":1608608685456,"results":"25","hashOfConfig":"21"},{"size":2976,"mtime":1608778249857,"results":"26","hashOfConfig":"21"},{"size":523,"mtime":1608778373449,"results":"27","hashOfConfig":"21"},{"size":1225,"mtime":1608581568861,"results":"28","hashOfConfig":"21"},{"size":1151,"mtime":1608581568859,"results":"29","hashOfConfig":"21"},{"size":3559,"mtime":1608581568860,"results":"30","hashOfConfig":"21"},{"size":2136,"mtime":1608581568859,"results":"31","hashOfConfig":"21"},{"size":1404,"mtime":1608581568860,"results":"32","hashOfConfig":"21"},{"size":5182,"mtime":1608608685458,"results":"33","hashOfConfig":"21"},{"size":4389,"mtime":1608610971203,"results":"34","hashOfConfig":"21"},{"size":2800,"mtime":1608608685457,"results":"35","hashOfConfig":"21"},{"size":1858,"mtime":1608779902390,"results":"36","hashOfConfig":"21"},{"size":1356,"mtime":1608773789825,"results":"37","hashOfConfig":"21"},{"size":2546,"mtime":1608778187940,"results":"38","hashOfConfig":"21"},{"size":2136,"mtime":1608778219283,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"5ppufw",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/index.js",[],["85","86"],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/App.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Page/SignIn.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/userContext/useUser.js",["87"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport AuthProvider from \"../provider/authProvider\";\n\nfunction getCurrentUser(token) {\n  const userDecoded = jwt.decode(token);\n  return userDecoded;\n}\n\nconst UserContext = createContext({\n  user: null,\n  token: null,\n});\n\nexport function UserProvider({ children }) {\n  const getToken = AuthProvider.provider.token;\n  const [token, setToken] = useState(getToken);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (!user && token) {\n      const user = getCurrentUser(token);\n      AuthProvider.provider.token = token;\n      setUser(user);\n    } else if (!token) {\n      AuthProvider.provider.logout();\n      setUser(null);\n    }\n  }, [token]);\n\n  return (\n    <UserContext.Provider value={{ user, token, setToken }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\nconst useUser = () => useContext(UserContext);\n\nexport default useUser;\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Home/Home.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Page/Feed.js",["88","89","90"],"import React, { useState, useEffect } from \"react\";\nimport SideBar from \"../SideBar/SideBar\";\nimport Reminder from \"../SideBar/Reminder\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Post from \"../Post/Post\";\nimport PostForm from \"../Post/PostForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider } from \"@material-ui/core\";\nimport { navigate } from \"@reach/router\";\nimport axios from \"axios\";\nimport useUser from \"../../userContext/useUser\";\nimport MenuNav from \"../MenuItem/MenuNav\";\n\nconst useStyles = makeStyles(theme => ({\n  reminder: {\n    position: \"relative\",\n    left: \"20px\",\n    bottom: \"10px\",\n  },\n  divider: {\n    marginLeft: \"55px\",\n  },\n  menu: {\n    flexDirection: \"row-reverse\",\n    width: \"100%\",\n    position: \"relative\",\n    left: \"1200px\",\n  },\n}));\n\nexport default function Feed() {\n  const classes = useStyles();\n\n  const [posts, setPosts] = useState([]);\n  const [refreshPost, setRefreshPost] = useState(true);\n\n  const { token, user } = useUser();\n\n  if (!user) navigate(\"/signin\");\n\n  //add new post\n  const addPost = async content => {\n    await axios\n      .post(\n        \"http://localhost:5000/api/post\",\n        {\n          content: content.content,\n          title: content.title,\n          limit: parseInt(content.limit),\n          location: content.location,\n          category: content.category,\n        },\n        { headers: { \"x-auth-token\": token } }\n      )\n      .then(res => {\n        setRefreshPost(!refreshPost);\n        console.log(res);\n      })\n      .catch(er => console.warn(er));\n  };\n\n  //get posts\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/post\", {\n        headers: { \"x-auth-token\": token },\n      })\n      .then(({ data }) => setPosts(data))\n      .catch(error => {\n        console.log(error);\n      });\n  }, [refreshPost]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/user\", {\n        headers: { \"x-auth-token\": token },\n      })\n      .then(res => {\n        console.log(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/post\", {\n        headers: { \"x-auth-token\": token },\n      })\n      .then(res => {\n        console.log(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Grid container display=\"flex\">\n        <Grid item className={classes.menu}>\n          <MenuNav />\n        </Grid>\n        <Grid item>\n          <SideBar />\n        </Grid>\n        <Grid>\n          <Grid item>\n            <PostForm onPostSubmit={addPost} />\n          </Grid>\n          <Divider className={classes.divider} />\n          <Grid item>\n            {posts.map(post => (\n              <Post key={post._id} {...post} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid className={classes.reminder}>\n          <Reminder />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/provider/authProvider.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/Reminder.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MenuItem/MenuNav.js",["91","92"],"import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useUser from \"../../userContext/useUser\";\nimport { Link } from \"@reach/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  buttonText: {\n    color: \"#FFF\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: \"none\",\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    color: \"#000\",\n  },\n}));\n\nexport default function MenuNav() {\n  const { user, setToken } = useUser();\n\n  const logoutHandler = () => {\n    setToken(null);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      {!user ? (\n        <Link to=\"/signin\" className={classes.link}>\n          <Button variant=\"text\" className={classes.buttonText}>\n            Login\n          </Button>\n        </Link>\n      ) : (\n        <>\n          <MenuItem onClick={() => logoutHandler()}>Logout</MenuItem>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/SignUp.js",["93"],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/PictureProfile.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/Welcome.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/SideBar.js",["94","95"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport useUser from \"../../userContext/useUser\";\nimport { navigate } from \"@reach/router\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  buttonList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  trendingButton: {\n    color: \"#7E7B7B\",\n    backgroundColor: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    borderRadius: \"50px\",\n    width: \"200px\",\n    margin: theme.spacing(2, 0, 0, 2),\n  },\n  myButton: {\n    color: \"#7E7B7B\",\n    backgroundColor: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    borderRadius: \"50px\",\n    width: \"200px\",\n    margin: theme.spacing(2, 0, 0, 2),\n    position: \"relative\",\n    left: \"40px\",\n  },\n  sidebar: {\n    backgroundColor: \"#F5AB7C\",\n    height: \"100%\",\n  },\n  divider: {\n    marginTop: \"20px\",\n    marginLeft: \"20px\",\n    marginRight: \"-20px\",\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const { token, user } = useUser();\n\n  if (!user) navigate(\"/signin\");\n\n  const [categoryList, setCategoryList] = useState(\"\");\n\n  useEffect(async () => {\n    axios\n      .get(\"http://localhost:5000/api/post\", {\n        headers: { \"x-auth-token\": token },\n      })\n      .then(({ data }) => setCategoryList(data))\n      .catch(error => {\n        console.log(error);\n      });\n  });\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div className={classes.sidebar}>\n      <div className={classes.toolbar} />\n      <Typography>Sofofiling</Typography>\n      <Divider className={classes.divider} />\n      <Typography>Trending Categories</Typography>\n      <List className={classes.buttonList}>\n        {[\"Art\", \"Music\", \"Code\", \"Game\", \"Cooking\"].map((text, index) => (\n          <Button key={index} className={classes.trendingButton}>\n            <ListItemText primary={text} />\n          </Button>\n        ))}\n      </List>\n      <Divider className={classes.divider} />\n      <List className={classes.buttonList}>\n        {[\"Art\", \"Music\", \"Code\", \"Game\", \"Cooking\"].map((text, index) => (\n          <Button key={text} className={classes.myButton}>\n            <ListItemText primary={text} />\n          </Button>\n        ))}\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      {/* Hambergur Button */}\n      <Grid>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={handleDrawerToggle}\n          className={classes.menuButton}>\n          <MenuIcon />\n        </IconButton>\n      </Grid>\n      <nav className={classes.drawer}>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}>\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open>\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Post/PostForm.js",["96","97"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useFormik } from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    dispaly: \"flex\",\n    backgroundColor: \"#eee\",\n    marginLeft: \"30px\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  card: {\n    minWidth: \"1000px\",\n  },\n  cardHeader: {\n    paddingLeft: theme.spacing(5),\n    display: \"flex\",\n    marginTop: \"20px\",\n    marginLeft: \"20px\",\n  },\n  avatar: {\n    marginTop: \"20px\",\n    width: \"50px\",\n    height: \"50px\",\n  },\n  name: {\n    marginLeft: \"16px\",\n    fontSize: \"1.5em\",\n    marginTop: \"30px\",\n  },\n  formField: {\n    width: \"100%\",\n  },\n  radioBtn: {\n    display: \"flex\",\n    direction: \"row\",\n  },\n  inputField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: \"left\",\n    marginRight: \"50px\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function PostForm({ onPostSubmit }) {\n  const classes = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      content: \"\",\n      location: \"\",\n      limit: \"\",\n      category: \"\",\n    },\n    onSubmit: values => {\n      onPostSubmit(values);\n    },\n  });\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={formik.handleSubmit}>\n        <div>\n          <div className={classes.cardHeader}>\n            <Avatar className={classes.avatar} />\n          </div>\n          <div>\n            <TextField\n              type=\"text\"\n              name=\"content\"\n              id=\"content\"\n              value={formik.values.content}\n              onChange={formik.handleChange}\n              className={classes.formField}\n            />\n            <Grid container>\n              <Grid item className={classes.inputField}>\n                <label htmlFor=\"title\">TITLE</label>\n                <label htmlFor=\"location\">LOCATION</label>\n                <label htmlFor=\"limit\">LIMIT</label>\n              </Grid>\n              <Grid item className={classes.inputField}>\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  value={formik.values.title}\n                  onChange={formik.handleChange}\n                />\n                <input\n                  type=\"text\"\n                  name=\"location\"\n                  id=\"location\"\n                  value={formik.values.location}\n                  onChange={formik.handleChange}\n                />\n                <input\n                  type=\"text\"\n                  name=\"limit\"\n                  id=\"limit\"\n                  value={formik.values.limit}\n                  onChange={formik.handleChange}\n                />\n              </Grid>\n            </Grid>\n            <FormControl className={classes.formControl}>\n              <InputLabel>Category</InputLabel>\n              <Select\n                name=\"category\"\n                id=\"category\"\n                open={open}\n                onClose={handleClose}\n                onOpen={handleOpen}\n                value={formik.values.category}\n                onChange={formik.handleChange}>\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value=\"Art\">Art</MenuItem>\n                <MenuItem value=\"Music\">Music</MenuItem>\n                <MenuItem value=\"Code\">Code</MenuItem>\n                <MenuItem value=\"Game\">Game</MenuItem>\n                <MenuItem value=\"Cooking\">Cooking</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n        </div>\n        <Button type=\"submit\" onClick={() => onPostSubmit(formik)}>\n          Post\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Post/Post.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/MultistepForm.js",["98"],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/Welcome.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/SignUp.js",["99"],"import React, { useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    backgroundColor: \"#F5AB7C\",\n    position: \"absolute\",\n    top: \"0\",\n    bottom: \"0\",\n    right: \"0\",\n    left: \"0\",\n  },\n  form: {\n    backgroundColor: \"#fff\",\n    margin: theme.spacing(15, 50, 8, 50),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"50px\",\n    minWidth: \"500px\",\n    minHeight: \"600px\",\n  },\n  input: {\n    marginTop: \"50px\",\n    width: \"80vh\",\n  },\n  button: {\n    position: \"relative\",\n    top: \"105px\",\n    border: \"10px solid #F5AB7C\",\n    borderRadius: \"50px\",\n    minWidth: \"400px\",\n    minHeight: \"70px\",\n    backgroundColor: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    fontSize: \"25px\",\n    color: \"#6DB5FD\",\n  },\n}));\n\nexport default function SignUp({ nextStep, handleChange, values }) {\n  const classes = useStyles();\n  const forward = e => {\n    e.preventDefault();\n    nextStep();\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <form className={classes.form}>\n        <TextField\n          required\n          name=\"firstname\"\n          id=\"firstName\"\n          label=\"First Name\"\n          className={classes.input}\n          onChange={handleChange(\"firstName\")}\n          defaultValue={values.firstName}\n        />\n\n        <TextField\n          required\n          name=\"lastName\"\n          id=\"form\"\n          label=\"Last Name\"\n          className={classes.input}\n          onChange={handleChange(\"lastName\")}\n          defaultValue={values.lastName}\n        />\n\n        <TextField\n          required\n          name=\"email\"\n          id=\"email\"\n          label=\"Email Address\"\n          className={classes.input}\n          onChange={handleChange(\"email\")}\n          defaultValue={values.email}\n        />\n\n        <TextField\n          required\n          name=\"password\"\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          className={classes.input}\n          onChange={handleChange(\"password\")}\n          defaultValue={values.password}\n        />\n        <Button className={classes.button} onClick={forward}>\n          Next\n        </Button>\n      </form>\n      <Link href=\"/signin\" variant=\"body2\">\n        Already have an account? Sign in\n      </Link>\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/PictureProfile.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":29,"column":6,"nodeType":"106","endLine":29,"endColumn":13,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":72,"column":6,"nodeType":"106","endLine":72,"endColumn":19,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"108","line":85,"column":6,"nodeType":"106","endLine":85,"endColumn":8,"suggestions":"110"},{"ruleId":"104","severity":1,"message":"108","line":98,"column":6,"nodeType":"106","endLine":98,"endColumn":8,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"116","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":12},{"ruleId":"112","severity":1,"message":"117","line":63,"column":9,"nodeType":"114","messageId":"115","endLine":63,"endColumn":16},{"ruleId":"112","severity":1,"message":"118","line":98,"column":10,"nodeType":"114","messageId":"115","endLine":98,"endColumn":22},{"ruleId":"104","severity":1,"message":"119","line":100,"column":13,"nodeType":"120","endLine":109,"endColumn":4},{"ruleId":"112","severity":1,"message":"121","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"122","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":58,"column":3,"nodeType":"125","messageId":"126","endLine":78,"endColumn":4},{"ruleId":"112","severity":1,"message":"127","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":23},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["131"],["132"],["133"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'forward' is assigned a value but never used.","'categoryList' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useEffect' is defined but never used.","'moment' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"138","fix":"140"},"Update the dependencies array to be: [token, user]",{"range":"141","text":"142"},"Update the dependencies array to be: [refreshPost, token]",{"range":"143","text":"144"},"Update the dependencies array to be: [token]",{"range":"145","text":"146"},{"range":"147","text":"146"},[765,772],"[token, user]",[1818,1831],"[refreshPost, token]",[2089,2091],"[token]",[2349,2351]]