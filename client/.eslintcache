[{"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/index.js":"1","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/App.js":"2","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/userContext/useUser.js":"3","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Home/Home.js":"4","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/provider/authProvider.js":"5","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/Reminder.js":"6","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MenuItem/MenuNav.js":"7","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/SignUp.js":"8","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/PictureProfile.js":"9","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/Welcome.js":"10","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/SideBar.js":"11","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/MultistepForm.js":"12","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/Welcome.js":"13","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/SignUp.js":"14","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/PictureProfile.js":"15","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Feed/Feed.js":"16","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Feed/Post.js":"17","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Feed/PostForm.js":"18","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/Category.js":"19","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/SubCategory.js":"20","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Profile/Profile.js":"21","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Profile/ProfileSideBar.js":"22","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Feed/Message.js":"23","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Message/Message.js":"24","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Message/Comment.js":"25","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SignIn/SignIn.js":"26","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Profile/ProfilePost.js":"27","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Profile/AlertDialog.js":"28","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Profile/EditDialog.js":"29","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SignUp/SignUp.js":"30"},{"size":230,"mtime":1608581568862,"results":"31","hashOfConfig":"32"},{"size":666,"mtime":1613952014304,"results":"33","hashOfConfig":"32"},{"size":1007,"mtime":1611271134676,"results":"34","hashOfConfig":"32"},{"size":1568,"mtime":1610413588796,"results":"35","hashOfConfig":"32"},{"size":523,"mtime":1611270926869,"results":"36","hashOfConfig":"32"},{"size":1225,"mtime":1608581568861,"results":"37","hashOfConfig":"32"},{"size":1340,"mtime":1612021725784,"results":"38","hashOfConfig":"32"},{"size":3559,"mtime":1608581568860,"results":"39","hashOfConfig":"32"},{"size":2136,"mtime":1608581568859,"results":"40","hashOfConfig":"32"},{"size":1404,"mtime":1608581568860,"results":"41","hashOfConfig":"32"},{"size":3021,"mtime":1611881022432,"results":"42","hashOfConfig":"32"},{"size":1910,"mtime":1613950756372,"results":"43","hashOfConfig":"32"},{"size":1356,"mtime":1608773789825,"results":"44","hashOfConfig":"32"},{"size":2534,"mtime":1612664319021,"results":"45","hashOfConfig":"32"},{"size":3261,"mtime":1609454420925,"results":"46","hashOfConfig":"32"},{"size":7755,"mtime":1613951828237,"results":"47","hashOfConfig":"32"},{"size":4148,"mtime":1612663422815,"results":"48","hashOfConfig":"32"},{"size":7673,"mtime":1613951378273,"results":"49","hashOfConfig":"32"},{"size":2779,"mtime":1609984035891,"results":"50","hashOfConfig":"32"},{"size":987,"mtime":1610072102805,"results":"51","hashOfConfig":"32"},{"size":2891,"mtime":1612224848413,"results":"52","hashOfConfig":"32"},{"size":2786,"mtime":1612019134967,"results":"53","hashOfConfig":"32"},{"size":113,"mtime":1611808765806,"results":"54","hashOfConfig":"32"},{"size":154,"mtime":1613951849173,"results":"55","hashOfConfig":"32"},{"size":409,"mtime":1613951968201,"results":"56","hashOfConfig":"32"},{"size":2812,"mtime":1611804921381,"results":"57","hashOfConfig":"32"},{"size":3476,"mtime":1612208800256,"results":"58","hashOfConfig":"32"},{"size":1501,"mtime":1611890993817,"results":"59","hashOfConfig":"32"},{"size":8291,"mtime":1612210594875,"results":"60","hashOfConfig":"32"},{"size":1335,"mtime":1613950641856,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"5ppufw",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/index.js",[],["133","134"],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/App.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/userContext/useUser.js",["135"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport AuthProvider from \"../provider/authProvider\";\n\nfunction getCurrentUser(token) {\n  const userDecoded = jwt.decode(token);\n  return userDecoded;\n}\n\nconst UserContext = createContext({\n  user: null,\n  token: null,\n});\n\nexport function UserProvider({ children }) {\n  const getToken = AuthProvider.provider.token;\n  const [token, setToken] = useState(getToken);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (!user && token) {\n      const user = getCurrentUser(token);\n      AuthProvider.provider.token = token;\n      setUser(user);\n    } else if (!token) {\n      AuthProvider.provider.logout();\n      setUser(null);\n      // window.location.reload();\n    }\n  }, [token]);\n\n  return (\n    <UserContext.Provider value={{ user, token, setToken }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\nconst useUser = () => useContext(UserContext);\n\nexport default useUser;\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Home/Home.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/provider/authProvider.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/Reminder.js",[],["136","137"],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MenuItem/MenuNav.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/SignUp.js",["138"],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/PictureProfile.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultiStepForm/FormDetail/Welcome.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/SideBar.js",["139","140","141"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  Divider,\n  Typography,\n  Button,\n  ListItemText,\n  List,\n  Link,\n} from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useUser from \"../../userContext/useUser\";\nimport { navigate } from \"@reach/router\";\nimport SubCategory from \"./SubCategory\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  buttonList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  trendingButton: {\n    color: \"#7E7B7B\",\n    backgroundColor: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    borderRadius: \"50px\",\n    width: \"200px\",\n    margin: theme.spacing(2, 0, 0, 2),\n  },\n  myButton: {\n    color: \"#7E7B7B\",\n    backgroundColor: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    borderRadius: \"50px\",\n    width: \"200px\",\n    margin: theme.spacing(2, 0, 0, 2),\n    position: \"relative\",\n    left: \"40px\",\n  },\n  sidebar: {\n    backgroundColor: \"#F5AB7C\",\n    height: \"100%\",\n    width: \"280px\",\n  },\n  divider: {\n    marginTop: \"20px\",\n    marginLeft: \"20px\",\n    marginRight: \"-20px\",\n  },\n}));\n\nexport default function SideBar(props) {\n  const classes = useStyles();\n  const [isSubscribed, setIsSubscribed] = useState(false);\n\n  const { subscribe, categoryHandler, unSub, userSubs } = props;\n\n  const { user } = useUser();\n\n  if (!user) navigate(\"/signin\");\n\n  const getCategory = category => {\n    categoryHandler(category);\n  };\n\n  const subscribeToggle = category => {\n    isSubscribed ? setIsSubscribed(false) : setIsSubscribed(true);\n  };\n\n  const removeSubs = category => {\n    unSub(category);\n    console.log(\"unsubscribed\");\n  };\n\n  const addSubs = category => {\n    subscribe(category);\n    console.log(\"subscribed\");\n  };\n\n  const categoryList = [\"Art\", \"Music\", \"Code\", \"Game\", \"Cooking\"];\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.sidebar}>\n        <div className={classes.toolbar} />\n        <Link href=\"/feed\">\n          <Typography>Sofofiling</Typography>\n        </Link>\n        <Divider className={classes.divider} />\n        <Typography>Trending Categories</Typography>\n        <List className={classes.buttonList}>\n          {categoryList.map((category, index) => (\n            <Button\n              key={index}\n              className={classes.trendingButton}\n              onClick={() => getCategory(category)}>\n              <ListItemText primary={category} />\n              <Button\n                onClick={() => removeSubs(category)}\n                style={{ fontSize: \".2em\" }}>\n                unsubscribe\n              </Button>\n              <Button\n                onClick={() => addSubs(category)}\n                style={{ fontSize: \".2em\" }}>\n                subscribe\n              </Button>\n            </Button>\n          ))}\n        </List>\n        <Divider className={classes.divider} />\n        <Typography>Subscribe Categories</Typography>\n        <SubCategory />\n      </div>\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/MultistepForm.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/Welcome.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/SignUp.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/MultistepForm/FormDetail/PictureProfile.js",["142"],"import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    backgroundColor: \"#F5AB7C\",\n    position: \"absolute\",\n    top: \"0\",\n    bottom: \"0\",\n    right: \"0\",\n    left: \"0\",\n  },\n  avatar: {\n    padding: \"0\",\n    margin: \"0 auto\",\n    width: \"270px\",\n    height: \"270px\",\n    color: \"#F5AB7C\",\n    cursor: \"pointer\",\n  },\n  message: {\n    padding: \"33px\",\n    margin: theme.spacing(0, 25, 0, 25),\n    color: \"#827F7F\",\n  },\n  button: {\n    position: \"relative\",\n    bottom: \"100px\",\n    border: \"10px solid #F5AB7C\",\n    borderRadius: \"50px\",\n    backgroundColor: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    fontSize: \"25px\",\n    color: \"#6DB5FD\",\n    margin: theme.spacing(0, 1, 0, 1),\n    width: \"200px\",\n  },\n  form: {\n    backgroundColor: \"#fff\",\n    margin: theme.spacing(15, 50, 8, 50),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"50px\",\n    minWidth: \"500px\",\n    minHeight: \"600px\",\n  },\n}));\n\nconst Span = styled.span`\n  margin: 0px;\n  padding-bottom: 50px;\n  cursor: pointer;\n  padding: 0px;\n`;\n\nexport default function PictureProfile({ nextStep, prevStep }) {\n  const classes = useStyles();\n  const [file, setFile] = useState();\n  const [uploadFile, setUploadFile] = useState({});\n\n  const forward = e => {\n    e.preventDefault();\n    nextStep();\n  };\n\n  const back = e => {\n    e.preventDefault();\n    prevStep();\n  };\n\n  const onAvatarSubmit = async e => {\n    e.preventDefault();\n\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = axios.post(\n        \"http://localhost:5000/api/auth/user/upload\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n\n      const { fileName, filePath } = res.data;\n\n      setUploadFile({ fileName, filePath });\n    } catch (error) {\n      if (error.response.status === 500) {\n        console.log(\"Server Error\");\n      } else {\n        console.log(\"No files uploaded\");\n      }\n    }\n\n    nextStep();\n  };\n\n  const onChangeImage = e => {\n    setFile(e.target.files[0]);\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <form className={classes.form} onSubmit={onAvatarSubmit}>\n        <Typography variant=\"h5\" className={classes.message}>\n          Time for an upload! <br />\n          We recommend a nice headshot so everyone can see who you are!\n        </Typography>\n        <AccountCircleIcon className={classes.avatar} />\n        <input\n          type=\"file\"\n          name=\"avatar\"\n          id=\"avatar\"\n          accept=\".jpg, .png, .jpg\"\n          onChange={onChangeImage}\n        />\n        <Span onClick={forward} className={classes.skip}>\n          Skip for now\n        </Span>\n        <Button onClick={back}>Back</Button>\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Feed/Feed.js",["143","144","145"],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Feed/Post.js",["146","147"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Grid,\n  FormControl,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Avatar,\n  Typography,\n  Button,\n} from \"@material-ui/core/\";\nimport { Link } from \"@reach/router\";\nimport useUser from \"../../userContext/useUser\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100vh\",\n    display: \"flex\",\n    marginLeft: \"30px\",\n  },\n  header: {\n    textAlign: \"left\",\n    padding: \"0px\",\n    margin: \"0px\",\n  },\n  avatar: {\n    margin: theme.spacing(4, 0, 0, 4),\n    width: \"50px\",\n    height: \"50px\",\n    backgroundColor: \"#F5AB7C\",\n  },\n  list: {\n    listStyleType: \"none\",\n    textAlign: \"left\",\n    fontWeight: \"bold\",\n    marginRight: theme.spacing(5),\n    marginLeft: theme.spacing(6),\n  },\n  formValue: {\n    textAlign: \"left\",\n    // marginLeft: theme.spacing(11),\n  },\n  card: {\n    borderTop: \"1px solid black\",\n    paddingBottom: \"40px\",\n  },\n  service: {\n    color: \"red\",\n    fontSize: \".8em\",\n    marginLeft: \"10px\",\n  },\n  name: {\n    margin: \"0px\",\n    position: \"relative\",\n    top: \"35px\",\n    left: \"5px\",\n  },\n  postBody: {\n    textAlign: \"left\",\n    marginLeft: theme.spacing(11),\n  },\n  delete: {},\n}));\n\nexport default function Post(props) {\n  const classes = useStyles();\n  const [value, setValue] = useState(\"\");\n  const { user } = useUser;\n\n  const handleRadio = event => {\n    setValue(event.target.value);\n  };\n\n  const viewSinglePost = postId => {\n    props.viewPost(postId);\n  };\n\n  const listInfo = [\"LOCATION:\", \"LIMIT:\", \"TIME:\", \"DATE:\"];\n  const { location, limit, time, date } = props;\n  const listValue = [location, limit, time, date];\n\n  return (\n    <div className={classes.root}>\n      <Container className={classes.card}>\n        <Grid container direction=\"row\">\n          <Grid item>\n            <Avatar className={classes.avatar} />\n          </Grid>\n          <Grid item className={classes.header}>\n            <h3 className={classes.name}>\n              {\"user\" in props\n                ? `${props.user.firstName} ${props.user.lastName}`\n                : \"anoynomous\"}\n              <span className={classes.service}>{props.service}</span>\n            </h3>\n            <h3 className={classes.name}>\n              <span>{props.category}</span>{\" \"}\n              <span style={{ color: \"#F5AB7C\" }}>||</span>\n              <span style={{ paddingLeft: \"5px\" }}>{props.title}</span>\n            </h3>\n          </Grid>\n        </Grid>\n\n        <Grid container>\n          <Grid item className={classes.postBody}>\n            <p>{props.content}</p>\n          </Grid>\n          <Grid container>\n            <Grid item>\n              {listInfo.map((listItem, index) => (\n                <ul className={classes.list} key={index}>\n                  <li>{listItem}</li>\n                </ul>\n              ))}\n            </Grid>\n            <Grid item className={classes.formValue}>\n              {listValue.map((listOutput, index) => (\n                <p key={index}>{listOutput}</p>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item>\n            <FormControl component=\"fieldset\" className={classes.radioBtn}>\n              <RadioGroup value={value} onChange={handleRadio}>\n                <FormControlLabel\n                  value=\"accept\"\n                  control={<Radio />}\n                  label=\"Accept\"\n                />\n                <FormControlLabel\n                  value=\"pass\"\n                  control={<Radio />}\n                  label=\"Pass\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          {props.activePost ? (\n            <Grid item>\n              <Button onClick={() => viewSinglePost(props._id)}>\n                <Typography>View Post</Typography>\n              </Button>\n            </Grid>\n          ) : (\n            <Grid item>\n              <Button onClick={props.prevState}>\n                <Typography>Back</Typography>\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Feed/PostForm.js",["148"],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/Category.js",[],["149","150"],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SideBar/SubCategory.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Profile/Profile.js",["151","152","153","154"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport ProfileSideBar from \"./ProfileSideBar\";\nimport ProfilePost from \"./ProfilePost\";\nimport useUser from \"../../userContext/useUser\";\nimport { Grid } from \"@material-ui/core\";\nimport MenuNav from \"../MenuItem/MenuNav\";\nimport { navigate } from \"@reach/router\";\n\nexport default function Profile() {\n  const [userPosts, setUserPosts] = useState([]);\n  const [refreshPost, setRefreshPost] = useState(true);\n  const [currentUser, setCurrentUser] = useState();\n  const [updatePost, setUpdatePost] = useState(null);\n\n  const { token, user } = useUser();\n  if (!user) navigate(\"/signin\");\n\n  const headers = { headers: { \"x-auth-token\": token } };\n\n  useEffect(async () => {\n    const userAPI = \"http://localhost:5000/api/user\";\n    const postAPI = \"http://localhost:5000/api/post\";\n\n    const users = await axios.get(userAPI, headers);\n    const post = await axios.get(postAPI, headers);\n\n    axios\n      .all([users, post])\n      .then(\n        axios.spread((...data) => {\n          const allUsers = data[0].data;\n          const allPosts = data[1].data;\n\n          let userData = allUsers;\n\n          let filterUser = userData.find(currentUser =>\n            setCurrentUser(currentUser)\n          );\n\n          setCurrentUser(filterUser);\n\n          let userPosts = allPosts.filter(userPost => {\n            if (userPost.user._id === user._id) {\n              return true;\n            } else {\n              return false;\n            }\n          });\n          setUserPosts(userPosts);\n        })\n      )\n      .catch(err => {\n        console.log(err);\n      });\n  }, [refreshPost]);\n\n  const deletePost = async postId => {\n    await axios\n      .delete(`http://localhost:5000/api/post/${postId}`, headers)\n      .then(() => setRefreshPost(!refreshPost));\n  };\n\n  const editPost = async (postId, form) => {\n    console.log(form);\n    try {\n      const response = await axios.put(\n        `http://localhost:5000/api/post/${postId}`,\n        {\n          content: form.content,\n          title: form.title,\n          limit: parseInt(form.limit),\n          location: form.location,\n          category: form.category,\n          service: form.service,\n          time: form.time,\n          date: form.date,\n        },\n        headers\n      );\n\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item>\n          <ProfileSideBar />\n        </Grid>\n        <Grid item>\n          {userPosts.map(post => (\n            <ProfilePost\n              key={post._id}\n              {...post}\n              deletePost={deletePost}\n              userInfo={currentUser}\n              updatePost={editPost}\n            />\n          ))}\n        </Grid>\n        <Grid item>\n          <MenuNav />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Profile/ProfileSideBar.js",["155","156","157"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  Divider,\n  Typography,\n  Button,\n  ListItemText,\n  List,\n  Link,\n} from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useUser from \"../../userContext/useUser\";\nimport { navigate } from \"@reach/router\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  buttonList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  trendingButton: {\n    color: \"#7E7B7B\",\n    backgroundColor: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    borderRadius: \"50px\",\n    width: \"200px\",\n    margin: theme.spacing(2, 0, 0, 2),\n  },\n  myButton: {\n    color: \"#7E7B7B\",\n    backgroundColor: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    borderRadius: \"50px\",\n    width: \"200px\",\n    margin: theme.spacing(2, 0, 0, 2),\n    position: \"relative\",\n    left: \"40px\",\n  },\n  sidebar: {\n    backgroundColor: \"#F5AB7C\",\n    height: \"100%\",\n    width: \"280px\",\n  },\n  divider: {\n    marginTop: \"20px\",\n    marginLeft: \"20px\",\n    marginRight: \"-20px\",\n  },\n}));\n\nexport default function ProfileSideBar(props) {\n  const classes = useStyles();\n  const [isSubscribed, setIsSubscribed] = useState(false);\n\n  const { subscribe, categoryHandler, unSub } = props;\n\n  const { user } = useUser();\n\n  if (!user) navigate(\"/signin\");\n\n  const getCategory = category => {\n    categoryHandler(category);\n  };\n\n  const removeSubs = category => {\n    unSub(category);\n    console.log(\"unsubscribed\");\n  };\n\n  const addSubs = category => {\n    subscribe(category);\n    console.log(\"subscribed\");\n  };\n\n  const categoryList = [\"Art\", \"Music\", \"Code\", \"Game\", \"Cooking\"];\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.sidebar}>\n        <div className={classes.toolbar} />\n        <Link href=\"/feed\">\n          <Typography>Sofofiling</Typography>\n        </Link>\n        <Divider className={classes.divider} />\n        <Typography>Trending Categories</Typography>\n        <List className={classes.buttonList}>\n          {categoryList.map((category, index) => (\n            <Button\n              key={index}\n              className={classes.trendingButton}\n              onClick={() => getCategory(category)}>\n              <ListItemText primary={category} />\n              <Button\n                onClick={() => removeSubs(category)}\n                style={{ fontSize: \".2em\" }}>\n                unsubscribe\n              </Button>\n              <Button\n                onClick={() => addSubs(category)}\n                style={{ fontSize: \".2em\" }}>\n                subscribe\n              </Button>\n            </Button>\n          ))}\n        </List>\n        <Divider className={classes.divider} />\n      </div>\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Feed/Message.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Message/Message.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Message/Comment.js",["158"],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SignIn/SignIn.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Profile/ProfilePost.js",["159","160","161","162"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Grid,\n  Avatar,\n  Typography,\n  Button,\n} from \"@material-ui/core/\";\nimport AlertDialog from \"./AlertDialog\";\nimport EditDialog from \"./EditDialog\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100vh\",\n    display: \"flex\",\n    marginLeft: \"30px\",\n  },\n  header: {\n    textAlign: \"left\",\n    padding: \"0px\",\n    margin: \"0px\",\n  },\n  avatar: {\n    margin: theme.spacing(4, 0, 0, 4),\n    width: \"50px\",\n    height: \"50px\",\n    backgroundColor: \"#F5AB7C\",\n  },\n  list: {\n    listStyleType: \"none\",\n    textAlign: \"left\",\n    fontWeight: \"bold\",\n    marginRight: theme.spacing(5),\n    marginLeft: theme.spacing(6),\n  },\n  formValue: {\n    textAlign: \"left\",\n    // marginLeft: theme.spacing(11),\n  },\n  card: {\n    borderTop: \"1px solid black\",\n    paddingBottom: \"40px\",\n  },\n  service: {\n    color: \"red\",\n    fontSize: \".8em\",\n    marginLeft: \"10px\",\n  },\n  name: {\n    margin: \"0px\",\n    position: \"relative\",\n    top: \"35px\",\n    left: \"5px\",\n  },\n  postBody: {\n    textAlign: \"left\",\n    marginLeft: theme.spacing(11),\n  },\n  delete: {},\n}));\n\nexport default function ProfilePost(props) {\n  const classes = useStyles();\n  const [post, setPost] = useState();\n\n  const listInfo = [\"LOCATION:\", \"LIMIT:\", \"TIME:\", \"DATE:\"];\n  const { location, limit, time, date } = props;\n  const listValue = [location, limit, time, date];\n\n  const removePost = postId => {\n    props.deletePost(postId);\n  };\n\n  const postUpdate = postId => {\n    props.updatePost(postId);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Container className={classes.card}>\n        <Grid container direction=\"row\">\n          <Grid item>\n            <Avatar className={classes.avatar} />\n          </Grid>\n          <Grid item className={classes.header}>\n            <h3 className={classes.name}>\n              {\"user\" in props\n                ? `${props.user.firstName} ${props.user.lastName}`\n                : \"anoynomous\"}\n              <span className={classes.service}>{props.service}</span>\n            </h3>\n            <h3 className={classes.name}>\n              <span>{props.category}</span>{\" \"}\n              <span style={{ color: \"#F5AB7C\" }}>||</span>\n              <span style={{ paddingLeft: \"5px\" }}>{props.title}</span>\n            </h3>\n          </Grid>\n        </Grid>\n\n        <Grid container>\n          <Grid item className={classes.postBody}>\n            <p>{props.content}</p>\n          </Grid>\n          <Grid container>\n            <Grid item>\n              {listInfo.map((listItem, index) => (\n                <ul className={classes.list} key={index}>\n                  <li>{listItem}</li>\n                </ul>\n              ))}\n            </Grid>\n            <Grid item className={classes.formValue}>\n              {listValue.map((listOutput, index) => (\n                <p key={index}>{listOutput}</p>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item>\n            <AlertDialog\n              postTitle={props.title}\n              deletePost={removePost}\n              postId={props._id}\n            />\n          </Grid>\n          <Grid item>\n            <EditDialog\n              postTitle={props.title}\n              postId={props._id}\n              updatePost={postUpdate}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Profile/AlertDialog.js",[],"/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/Profile/EditDialog.js",["163"],"import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useFormik } from \"formik\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  cardHeader: {\n    paddingLeft: theme.spacing(5),\n    display: \"flex\",\n    marginTop: \"20px\",\n    marginLeft: \"20px\",\n  },\n  name: {\n    marginLeft: \"16px\",\n    fontSize: \"1.5em\",\n    marginTop: \"30px\",\n  },\n  texbox: {\n    minWidth: \"650px\",\n    marginTop: \"20px\",\n    position: \"relative\",\n    bottom: \"70px\",\n    right: \"20px\",\n  },\n  radioBtn: {\n    display: \"flex\",\n    direction: \"row\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: \"left\",\n    marginRight: \"50px\",\n    position: \"relative\",\n    left: \"120px\",\n    bottom: \"50px\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  label: {\n    marginTop: \"10px\",\n    fontWeight: \"bold\",\n  },\n  input: {\n    marginTop: \"10px\",\n    border: \"none\",\n    borderBottom: \"1px solid\",\n  },\n}));\n\nexport default function EditDialog({ postTitle, postId, updatePost }) {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  const [radio, setRadio] = useState(\"no\");\n\n  const [limitToggle, setLimitToggle] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const editPost = postId => {\n    updatePost(postId);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      content: \"\",\n      location: \"\",\n      limit: \"0\",\n      title: \"\",\n      time: \"\",\n      date: \"\",\n      category: \"\",\n      service: \"\",\n    },\n    onSubmit: (values, { resetForm }) => {\n      // onPostSubmit(values);\n      resetForm();\n    },\n  });\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Edit Post\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">\n          Edit Post: {postTitle}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <form>\n              <Grid>\n                <TextField\n                  type=\"text\"\n                  name=\"content\"\n                  id=\"content\"\n                  value={formik.values.content}\n                  className={classes.texbox}\n                  autoComplete=\"off\"\n                  placeholder=\"How are you doing?\"\n                  multiline\n                  rows=\"5\"\n                />\n              </Grid>\n              <Grid container>\n                <Grid item className={classes.form}>\n                  <label htmlFor=\"service\" className={classes.label}>\n                    SERVICE\n                  </label>\n                  <select\n                    name=\"service\"\n                    id=\"service\"\n                    value={formik.values.service}\n                    className={classes.input}>\n                    <option value=\"none\" hidden>\n                      --select service--\n                    </option>\n                    <option value=\"Looking For\">Looking For</option>\n                    <option value=\"Providing Service\">Providing Service</option>\n                  </select>\n                  <label htmlFor=\"title\" className={classes.label}>\n                    TITLE\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    value={formik.values.title}\n                    autoComplete=\"off\"\n                    className={classes.input}\n                  />\n                  <label htmlFor=\"location\" className={classes.label}>\n                    LOCATION\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"location\"\n                    id=\"location\"\n                    value={formik.values.location}\n                    autoComplete=\"off\"\n                    className={classes.input}\n                  />\n                </Grid>\n\n                <Grid item className={classes.form}>\n                  <label htmlFor=\"limit\" className={classes.label}>\n                    LIMIT\n                  </label>\n                  <Grid container>\n                    <Grid item>\n                      <label htmlFor=\"yes\">Yes</label>\n                      <input\n                        type=\"radio\"\n                        id=\"yes\"\n                        name=\"yes\"\n                        checked={radio === \"yes\"}\n                        onChange={() => setRadio(\"yes\")}\n                      />\n                    </Grid>\n                    <Grid>\n                      <label htmlFor=\"no\">No</label>\n                      <input\n                        type=\"radio\"\n                        id=\"no\"\n                        name=\"no\"\n                        value=\"no\"\n                        checked={radio === \"no\"}\n                        onClick={handleClose}\n                        onChange={() => setRadio(\"no\")}\n                      />\n                    </Grid>\n                    <Grid>\n                      {limitToggle && (\n                        <input\n                          type=\"text\"\n                          name=\"limit\"\n                          id=\"limit\"\n                          value={formik.values.limit}\n                          autoComplete=\"off\"\n                          style={{\n                            border: \"none\",\n                            borderBottom: \"1px solid\",\n                            marginLeft: \"10px\",\n                            width: \"45px\",\n                          }}\n                        />\n                      )}\n                    </Grid>\n                  </Grid>\n\n                  <label htmlFor=\"time\" className={classes.label}>\n                    TIME\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"time\"\n                    id=\"time\"\n                    value={formik.values.time}\n                    autoComplete=\"off\"\n                    className={classes.input}\n                  />\n                  <label htmlFor=\"date\" className={classes.label}>\n                    Date\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"date\"\n                    id=\"date\"\n                    value={formik.values.date}\n                    autoComplete=\"off\"\n                    className={classes.input}\n                  />\n                  <label className={classes.label}>Category</label>\n                  <select\n                    name=\"category\"\n                    id=\"category\"\n                    value={formik.values.category}\n                    style={{\n                      marginTop: \"10px\",\n                      borderBottom: \"1px solid black\",\n                      border: \"none\",\n                    }}>\n                    <option value=\"none\" hidden>\n                      Category\n                    </option>\n                    <option value=\"Art\">Art</option>\n                    <option value=\"Music\">Music</option>\n                    <option value=\"Code\">Code</option>\n                    <option value=\"Game\">Game</option>\n                    <option value=\"Cooking\">Cooking</option>\n                  </select>\n                </Grid>\n              </Grid>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => editPost(postId)} color=\"primary\" autoFocus>\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/chiayengxiong/Desktop/git/Sofofiling/client/src/components/SignUp/SignUp.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":30,"column":6,"nodeType":"170","endLine":30,"endColumn":13,"suggestions":"171"},{"ruleId":"164","replacedBy":"172"},{"ruleId":"166","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":63,"column":9,"nodeType":"176","messageId":"177","endLine":63,"endColumn":16},{"ruleId":"174","severity":1,"message":"178","line":3,"column":3,"nodeType":"176","messageId":"177","endLine":3,"endColumn":7},{"ruleId":"174","severity":1,"message":"179","line":62,"column":46,"nodeType":"176","messageId":"177","endLine":62,"endColumn":54},{"ruleId":"174","severity":1,"message":"180","line":72,"column":9,"nodeType":"176","messageId":"177","endLine":72,"endColumn":24},{"ruleId":"174","severity":1,"message":"181","line":68,"column":10,"nodeType":"176","messageId":"177","endLine":68,"endColumn":20},{"ruleId":"174","severity":1,"message":"182","line":34,"column":20,"nodeType":"176","messageId":"177","endLine":34,"endColumn":31},{"ruleId":"168","severity":1,"message":"183","line":70,"column":13,"nodeType":"184","endLine":108,"endColumn":4},{"ruleId":"168","severity":1,"message":"185","line":108,"column":6,"nodeType":"170","endLine":108,"endColumn":19,"suggestions":"186"},{"ruleId":"174","severity":1,"message":"187","line":14,"column":10,"nodeType":"176","messageId":"177","endLine":14,"endColumn":14},{"ruleId":"174","severity":1,"message":"188","line":70,"column":11,"nodeType":"176","messageId":"177","endLine":70,"endColumn":15},{"ruleId":"174","severity":1,"message":"189","line":95,"column":10,"nodeType":"176","messageId":"177","endLine":95,"endColumn":19},{"ruleId":"164","replacedBy":"190"},{"ruleId":"166","replacedBy":"191"},{"ruleId":"174","severity":1,"message":"192","line":14,"column":10,"nodeType":"176","messageId":"177","endLine":14,"endColumn":20},{"ruleId":"174","severity":1,"message":"193","line":14,"column":22,"nodeType":"176","messageId":"177","endLine":14,"endColumn":35},{"ruleId":"168","severity":1,"message":"183","line":21,"column":13,"nodeType":"184","endLine":56,"endColumn":4},{"ruleId":"168","severity":1,"message":"185","line":56,"column":6,"nodeType":"170","endLine":56,"endColumn":19,"suggestions":"194"},{"ruleId":"174","severity":1,"message":"178","line":3,"column":3,"nodeType":"176","messageId":"177","endLine":3,"endColumn":7},{"ruleId":"174","severity":1,"message":"195","line":59,"column":10,"nodeType":"176","messageId":"177","endLine":59,"endColumn":22},{"ruleId":"174","severity":1,"message":"196","line":59,"column":24,"nodeType":"176","messageId":"177","endLine":59,"endColumn":39},{"ruleId":"174","severity":1,"message":"197","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":15},{"ruleId":"174","severity":1,"message":"198","line":7,"column":3,"nodeType":"176","messageId":"177","endLine":7,"endColumn":13},{"ruleId":"174","severity":1,"message":"199","line":8,"column":3,"nodeType":"176","messageId":"177","endLine":8,"endColumn":9},{"ruleId":"174","severity":1,"message":"200","line":65,"column":10,"nodeType":"176","messageId":"177","endLine":65,"endColumn":14},{"ruleId":"174","severity":1,"message":"201","line":65,"column":16,"nodeType":"176","messageId":"177","endLine":65,"endColumn":23},{"ruleId":"174","severity":1,"message":"202","line":64,"column":23,"nodeType":"176","messageId":"177","endLine":64,"endColumn":37},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["205"],["203"],["204"],"no-unused-vars","'forward' is assigned a value but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'userSubs' is assigned a value but never used.","'subscribeToggle' is assigned a value but never used.","'uploadFile' is assigned a value but never used.","'setUserSubs' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'headers' and 'user._id'. Either include them or remove the dependency array.",["206"],"'Link' is defined but never used.","'user' is assigned a value but never used.","'selectImg' is assigned a value but never used.",["203"],["204"],"'updatePost' is assigned a value but never used.","'setUpdatePost' is assigned a value but never used.",["207"],"'isSubscribed' is assigned a value but never used.","'setIsSubscribed' is assigned a value but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'post' is assigned a value but never used.","'setPost' is assigned a value but never used.","'setLimitToggle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"210","fix":"212"},"Update the dependencies array to be: [token, user]",{"range":"213","text":"214"},"Update the dependencies array to be: [headers, refreshPost, user._id]",{"range":"215","text":"216"},{"range":"217","text":"216"},[800,807],"[token, user]",[2978,2991],"[headers, refreshPost, user._id]",[1645,1658]]